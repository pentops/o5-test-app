// Code generated by protoc-gen-go-sugar. DO NOT EDIT.

package test_pb

import (
	driver "database/sql/driver"
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
)

// GreetingEventType is a oneof wrapper
type GreetingEventTypeKey string

const (
	GreetingEvent_Initiated GreetingEventTypeKey = "initiated"
	GreetingEvent_Replied   GreetingEventTypeKey = "replied"
)

func (x *GreetingEventType) TypeKey() (GreetingEventTypeKey, bool) {
	switch x.Type.(type) {
	case *GreetingEventType_Initiated_:
		return GreetingEvent_Initiated, true
	case *GreetingEventType_Replied_:
		return GreetingEvent_Replied, true
	default:
		return "", false
	}
}

type IsGreetingEventTypeWrappedType interface {
	TypeKey() GreetingEventTypeKey
	proto.Message
}

func (x *GreetingEventType) Set(val IsGreetingEventTypeWrappedType) {
	switch v := val.(type) {
	case *GreetingEventType_Initiated:
		x.Type = &GreetingEventType_Initiated_{Initiated: v}
	case *GreetingEventType_Replied:
		x.Type = &GreetingEventType_Replied_{Replied: v}
	}
}
func (x *GreetingEventType) Get() IsGreetingEventTypeWrappedType {
	switch v := x.Type.(type) {
	case *GreetingEventType_Initiated_:
		return v.Initiated
	case *GreetingEventType_Replied_:
		return v.Replied
	default:
		return nil
	}
}
func (x *GreetingEventType_Initiated) TypeKey() GreetingEventTypeKey {
	return GreetingEvent_Initiated
}
func (x *GreetingEventType_Replied) TypeKey() GreetingEventTypeKey {
	return GreetingEvent_Replied
}

type IsGreetingEventType_Type = isGreetingEventType_Type

// GreetingStatus
const (
	GreetingStatus_UNSPECIFIED GreetingStatus = 0
	GreetingStatus_INITIATED   GreetingStatus = 1
	GreetingStatus_REPLIED     GreetingStatus = 2
)

var (
	GreetingStatus_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "INITIATED",
		2: "REPLIED",
	}
	GreetingStatus_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"INITIATED":   1,
		"REPLIED":     2,
	}
	GreetingStatus_value_either = map[string]int32{
		"UNSPECIFIED":                 0,
		"GREETING_STATUS_UNSPECIFIED": 0,
		"INITIATED":                   1,
		"GREETING_STATUS_INITIATED":   1,
		"REPLIED":                     2,
		"GREETING_STATUS_REPLIED":     2,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x GreetingStatus) ShortString() string {
	return GreetingStatus_name_short[int32(x)]
}
func (x GreetingStatus) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *GreetingStatus) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := GreetingStatus_value_either[strVal]
	*x = GreetingStatus(val)
	return nil
}

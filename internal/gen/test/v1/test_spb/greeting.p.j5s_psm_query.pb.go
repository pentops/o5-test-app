// Code generated by protoc-gen-go-psm. DO NOT EDIT.

package test_spb

import (
	context "context"
	psm "github.com/pentops/protostate/psm"
	sqrlx "github.com/pentops/sqrlx.go/sqrlx"
)

// State Query Service for %sGreeting
// QuerySet is the query set for the Greeting service.

type GreetingPSMQuerySet = psm.StateQuerySet[
	*GreetingGetRequest,
	*GreetingGetResponse,
	*GreetingListRequest,
	*GreetingListResponse,
	*GreetingEventsRequest,
	*GreetingEventsResponse,
]

func NewGreetingPSMQuerySet(
	smSpec psm.QuerySpec[
		*GreetingGetRequest,
		*GreetingGetResponse,
		*GreetingListRequest,
		*GreetingListResponse,
		*GreetingEventsRequest,
		*GreetingEventsResponse,
	],
	options psm.StateQueryOptions,
) (*GreetingPSMQuerySet, error) {
	return psm.BuildStateQuerySet[
		*GreetingGetRequest,
		*GreetingGetResponse,
		*GreetingListRequest,
		*GreetingListResponse,
		*GreetingEventsRequest,
		*GreetingEventsResponse,
	](smSpec, options)
}

type GreetingPSMQuerySpec = psm.QuerySpec[
	*GreetingGetRequest,
	*GreetingGetResponse,
	*GreetingListRequest,
	*GreetingListResponse,
	*GreetingEventsRequest,
	*GreetingEventsResponse,
]

func DefaultGreetingPSMQuerySpec(tableSpec psm.QueryTableSpec) GreetingPSMQuerySpec {
	return psm.QuerySpec[
		*GreetingGetRequest,
		*GreetingGetResponse,
		*GreetingListRequest,
		*GreetingListResponse,
		*GreetingEventsRequest,
		*GreetingEventsResponse,
	]{
		QueryTableSpec: tableSpec,
		ListRequestFilter: func(req *GreetingListRequest) (map[string]interface{}, error) {
			filter := map[string]interface{}{}
			return filter, nil
		},
		ListEventsRequestFilter: func(req *GreetingEventsRequest) (map[string]interface{}, error) {
			filter := map[string]interface{}{}
			filter["greeting_id"] = req.GreetingId
			return filter, nil
		},
	}
}

type GreetingQueryServiceImpl struct {
	db       sqrlx.Transactor
	querySet *GreetingPSMQuerySet
	UnsafeGreetingQueryServiceServer
}

var _ GreetingQueryServiceServer = &GreetingQueryServiceImpl{}

func NewGreetingQueryServiceImpl(db sqrlx.Transactor, querySet *GreetingPSMQuerySet) *GreetingQueryServiceImpl {
	return &GreetingQueryServiceImpl{
		db:       db,
		querySet: querySet,
	}
}

func (s *GreetingQueryServiceImpl) GreetingGet(ctx context.Context, req *GreetingGetRequest) (*GreetingGetResponse, error) {
	resObject := &GreetingGetResponse{}
	err := s.querySet.Get(ctx, s.db, req, resObject)
	if err != nil {
		return nil, err
	}
	return resObject, nil
}

func (s *GreetingQueryServiceImpl) GreetingList(ctx context.Context, req *GreetingListRequest) (*GreetingListResponse, error) {
	resObject := &GreetingListResponse{}
	err := s.querySet.List(ctx, s.db, req, resObject)
	if err != nil {
		return nil, err
	}
	return resObject, nil
}

func (s *GreetingQueryServiceImpl) GreetingEvents(ctx context.Context, req *GreetingEventsRequest) (*GreetingEventsResponse, error) {
	resObject := &GreetingEventsResponse{}
	err := s.querySet.ListEvents(ctx, s.db, req, resObject)
	if err != nil {
		return nil, err
	}
	return resObject, nil
}

// Code generated by protoc-gen-go-psm. DO NOT EDIT.

package test_spb

import (
	psm "github.com/pentops/protostate/psm"
)

// State Query Service for %sGreeting
// QuerySet is the query set for the Greeting service.

type GreetingPSMQuerySet = psm.StateQuerySet[
	*GetGreetingRequest,
	*GetGreetingResponse,
	*ListGreetingsRequest,
	*ListGreetingsResponse,
	*ListGreetingEventsRequest,
	*ListGreetingEventsResponse,
]

func NewGreetingPSMQuerySet(
	smSpec psm.QuerySpec[
		*GetGreetingRequest,
		*GetGreetingResponse,
		*ListGreetingsRequest,
		*ListGreetingsResponse,
		*ListGreetingEventsRequest,
		*ListGreetingEventsResponse,
	],
	options psm.StateQueryOptions,
) (*GreetingPSMQuerySet, error) {
	return psm.BuildStateQuerySet[
		*GetGreetingRequest,
		*GetGreetingResponse,
		*ListGreetingsRequest,
		*ListGreetingsResponse,
		*ListGreetingEventsRequest,
		*ListGreetingEventsResponse,
	](smSpec, options)
}

type GreetingPSMQuerySpec = psm.QuerySpec[
	*GetGreetingRequest,
	*GetGreetingResponse,
	*ListGreetingsRequest,
	*ListGreetingsResponse,
	*ListGreetingEventsRequest,
	*ListGreetingEventsResponse,
]

func DefaultGreetingPSMQuerySpec(tableSpec psm.QueryTableSpec) GreetingPSMQuerySpec {
	return psm.QuerySpec[
		*GetGreetingRequest,
		*GetGreetingResponse,
		*ListGreetingsRequest,
		*ListGreetingsResponse,
		*ListGreetingEventsRequest,
		*ListGreetingEventsResponse,
	]{
		QueryTableSpec: tableSpec,
		ListRequestFilter: func(req *ListGreetingsRequest) (map[string]interface{}, error) {
			filter := map[string]interface{}{}
			return filter, nil
		},
		ListEventsRequestFilter: func(req *ListGreetingEventsRequest) (map[string]interface{}, error) {
			filter := map[string]interface{}{}
			filter["greeting_id"] = req.GreetingId
			return filter, nil
		},
	}
}

syntax = "proto3";

package test.v1.service;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "test/v1/greeting.proto";

option go_package = "github.com/pentops/o5-test-app/internal/gen/test/v1/test_spb";

service GreetingCommandService {
  rpc Hello(HelloRequest) returns (HelloResponse) {
    option (google.api.http) = {
      post: "/test/v1/echo",
      body: "*"
    };
  }
}

message HelloRequest {
  // Required greeting id.
  string greeting_id = 1 [(buf.validate.field).string.uuid = true];

  // Required name of the person to greet.
  string name = 2 [(buf.validate.field).required = true];

  // When not nil, the handler will throw an unhandled error prior to processing the request.
  test.v1.TestError throw_error = 3;

  // Passed to the request message, the call to this command should succeed, but
  // handling the resulting side-effect should result in a dead letter
  test.v1.TestError worker_error = 4;
}

message HelloResponse {
  test.v1.GreetingState greeting = 1;
}
